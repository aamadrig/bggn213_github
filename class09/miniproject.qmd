---
title: "mini-project"
author: "Assael Madrigal"
format: pdf
---


#1 Looking at the data 

```{r}
# Save your input data file into your Project directory
fna.data <- "WisconsinCancer.csv"

# Complete the following code to input the data and store as wisc.df
wisc.df <- read.csv(fna.data, row.names=1)
```


Then remove the diagnosis column
```{r}
# We can use -1 here to remove the first column
wisc.data <- wisc.df[,-1]

#i also gotta get rid of the last column because i got an extra 'x' one
wisc.data <- wisc.data[, -c(ncol(wisc.data))]
```

The diagnosis columns here
```{r}
# Create diagnosis vector for later 
diagnosis <- wisc.df[,1]
```

> Q1. How many observations are in this dataset?

```{r}
dim(wisc.data)
nrow(wisc.data)
```
There are 569 patients with 31 observations (columns)

> Q2. How many of the observations have a malignant diagnosis?

```{r}
sum(diagnosis=="M")
# can also do it another way
table(wisc.df$diagnosis)

```


> Q3. How many variables/features in the data are suffixed with _mean?

```{r}
colnames(wisc.data)
grep("_mean$", colnames(wisc.data))

```

So there are 10 features suffixed with _mean


#2 PCA section


First see if the data needs to be scaled
```{r}
# Check column means and standard deviations
colMeans(wisc.data)

apply(wisc.data,2,sd)
```

The values are very distinct from each other so scaling is needed, then call prcomp()
```{r}
# Perform PCA on wisc.data by completing the following code
#df <- wisc.data[, -c(ncol(wisc.data))]

wisc.pr <- prcomp(wisc.data, scale=TRUE)
summary(wisc.pr)
```
> Q4. From your results, what proportion of the original variance is captured by the first principal components (PC1)?

PC1 accounts for 44.27% of the variance

> Q5. How many principal components (PCs) are required to describe at least 70% of the original variance in the data?

We need PC1, 2, and 3 to account for at least 70% of the total variance

> Q6. How many principal components (PCs) are required to describe at least 90% of the original variance in the data?

For at least 90% we need 7 PCs

```{r}
plot(wisc.pr$x)
plot(wisc.pr$x[,1], wisc.pr$x[,2], col=(as.logical(diagnosis=="M")+9))
```

```{r}
v <- summary(wisc.pr)
pcvar <- v$importance[3,]
pcvar["PC1"]
```


make a biplot of the PCA
```{r}

biplot(wisc.pr)
```

The biplot is very messy so we will make a ggplot one instead

```{r}
# Scatter plot observations by components 1 and 2
plot(wisc.pr$x[,1], wisc.pr$x[,2] , col = as.logical((diagnosis=="M")+1) , 
     xlab = "PC1", ylab = "PC2")
```

> Q8. Generate a similar plot for principal components 1 and 3. What do you notice about these plots?

PC1 and PC3 are not very informative
```{r}
plot(wisc.pr$x[,3], col = (diagnosis=="M")+1, 
     xlab = "PC1", ylab = "PC3")
```


```{r}

# Create a data.frame for ggplot
df <- as.data.frame(wisc.pr$x)
df$diagnosis <- diagnosis

# Load the ggplot2 package
library(ggplot2)

# Make a scatter plot colored by diagnosis
ggplot(df) + 
  aes(PC1, PC2, col=diagnosis=="M") + 
  geom_point()
```

# Variance

```{r}
pr.var <- wisc.pr$sdev^2
head(pr.var)
```


```{r}
# Variance explained by each principal component: pve
pve <- pr.var / sum(pr.var)

# Plot variance explained for each principal component
plot(pve, xlab = "Principal Component", 
     ylab = "Proportion of Variance Explained", 
     ylim = c(0, 1), type = "o")
```

```{r}

# Alternative scree plot of the same data, note data driven y-axis
barplot(pve, ylab = "Precent of Variance Explained",
     names.arg=paste0("PC",1:length(pve)), las=2, axes = FALSE)
axis(2, at=pve, labels=round(pve,2)*100 )
```

> Q9. For the first principal component, what is the component of the loading vector (i.e. wisc.pr$rotation[,1]) for the feature concave.points_mean? This tells us how much this original feature contributes to the first PC.


```{r}
wisc.pr$rotation["concave.points_mean",1]
```



#Heirarchical clustering

> Q10. Using the plot() and abline() functions, what is the height at which the clustering model has 4 clusters?

at height 19 it splits it into 4 clusters

```{r}
data.scaled <- scale(wisc.data)
data.dist <- dist(data.scaled)
wisc.hclust <- hclust(data.dist, method = "complete")
plot(wisc.hclust)
abline(h=19, col="red", lty=2)
```

#number of clusters 

```{r}
wisc.hclust.clusters <-cutree(wisc.hclust, k=4)
table(wisc.hclust.clusters, diagnosis)
```

> Q11. OPTIONAL: Can you find a better cluster vs diagnoses match by cutting into a different number of clusters between 2 and 10? How do you judge the quality of your result in each case?

I used 3 PCs and compared the Table from my PC to the diagnosis table to see if they matched. If i only use 2 clusters I get something very similar to the diagnosis but if i increase to 3 PCs I start to see difference between them.

```{r}
wisc.hclust.clusters <-cutree(wisc.hclust, k=4)
table(wisc.hclust.clusters, diagnosis)

```

#Clustering in PC space

```{r}
d.pc <- dist(wisc.pr$x[,1:3])
wisc.pr.hc <- hclust(d.pc, method="ward.D2")
#plot(wisc.pr.hc)
grps <- cutree(wisc.pr.hc, k=2)
table(grps)
```

```{r}
table(diagnosis)
table(diagnosis, grps)
```


> Q12. Which method gives your favorite results for the same data.dist dataset? Explain your reasoning.

The ward method gave me the best looking histogram so i prefer that one. It also minimizes the variance between the samples, but in this case I think it also has the biggest height which makes it in my opinion better to distinguish M vs B.

```{r}
single_hc <- hclust(d.pc, method="single")
plot(single_hc)
complete_hc <- hclust(d.pc, method="complete")
plot(complete_hc)
average_hc <- hclust(d.pc, method="average")
plot(average_hc)
wardD2_hc <- hclust(d.pc, method="ward.D2")
plot(wardD2_hc)
```


# Clustering on PCA results


```{r}
d.pc <- dist(wisc.pr$x[,1:7])
wisc.pr.hc <- hclust(d.pc, method="ward.D2")
plot(wisc.pr.hc)
grps <- cutree(wisc.pr.hc, k=2)
table(grps)
```
```{r}
table(grps, diagnosis)
```
```{r}
plot(wisc.pr$x[,1:2], col=grps)
```
```{r}
plot(wisc.pr$x[,1:2], col=-(diagnosis=="M")+2)
```

```{r}
g <- as.factor(grps)
levels(g)
g <- relevel(g,2)
levels(g)
# Plot using our re-ordered factor 
plot(wisc.pr$x[,1:2], col=g)
#library(rgl)
#plot3d(wisc.pr$x[,1:3], xlab="PC 1", ylab="PC 2", zlab="PC 3", cex=1.5, size=1, type="s", col=grps)

```

> Q13. How well does the newly created model with four clusters separate out the two diagnoses?

When using 2 clusters it does not make much difference if i use 70% variance or 90% variance (7PCs). But when I use more clusters it becomes tricky to say which one is really malignant because clusters 2 and 3 have 77 and 66 tumors in it but they are most malign. Cluster 1 since it has 0 B is more likely to include M.

```{r}
wisc.pr.hclust <- hclust(dist(wisc.pr$x[,1:7]), method="ward.D2")
wisc.pr.hclust.clusters <- cutree(wisc.pr.hclust, k=2)
table(wisc.pr.hclust.clusters, diagnosis)

wisc.pr.hclust <- hclust(dist(wisc.pr$x[,1:3]), method="ward.D2")
wisc.pr.hclust.clusters <- cutree(wisc.pr.hclust, k=2)
table(wisc.pr.hclust.clusters, diagnosis)

wisc.pr.hclust <- hclust(dist(wisc.pr$x[,1:7]), method="ward.D2")
wisc.pr.hclust.clusters <- cutree(wisc.pr.hclust, k=4)
table(wisc.pr.hclust.clusters, diagnosis)

```

> Q14. How well do the hierarchical clustering models you created in previous sections (i.e. before PCA) do in terms of separating the diagnoses? Again, use the table() function to compare the output of each model (wisc.km$cluster and wisc.hclust.clusters) with the vector containing the actual diagnoses.

```{r}
print("kmeans")
km <- kmeans(wisc.data, centers=4, nstart=20)
table(km$cluster,diagnosis)

print("hclust")
wisc.pr.hclust <- hclust(dist(wisc.pr$x[,1:7]), method="ward.D2")
wisc.pr.hclust.clusters <- cutree(wisc.pr.hclust, k=4)
table(wisc.pr.hclust.clusters, diagnosis)
```

Comparing hclust vs kmean it looks like the groups for hclust are a lot different. For kmeans there was a group with 94 and 87 B and M in the same group which is a bad cluster because it does not differentiate them. The h clust had bigger differences in the clusters. hcluster 4 has 24 false negatives and 329 true negatives while kmeans has 24 false negatives and 262 true negatives. So in distinguishing bening i would do hclust. For malign it is trickier because they are present in all 4 clusters regardless of the method so that one is trickier but kmeans seems to distinguigh better.

> Q15. OPTIONAL: Which of your analysis procedures resulted in a clustering model with the best specificity? How about sensitivity?

I think the best model was when we took the first 2 components and assigned it 4 different clusters, that was the closest to the expert's opinion.

```{r}
#url <- "new_samples.csv"
url <- "https://tinyurl.com/new-samples-CSV"
new <- read.csv(url)
npc <- predict(wisc.pr, newdata=new)
npc
```
```{r}
plot(wisc.pr$x[,1:2], col=g)
points(npc[,1], npc[,2], col="blue", pch=16, cex=3)
text(npc[,1], npc[,2], c(1,2), col="white")
```

> Q16. Which of these new patients should we prioritize for follow up based on your results?

based on this patient #2 is more urgent because their tumor is not as clustered to the benign as #1. 
